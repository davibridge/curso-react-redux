{"ast":null,"code":"var _jsxFileName = \"/home/davi/exercicios-react/src/componentes/Contador.jsx\";\nimport React, { Component } from 'react';\nexport default class Contador extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      numero: this.props.numeroInicial\n    };\n\n    this.maisUm = () => {\n      this.setState({\n        numero: this.state.numero + 1\n      }); // this.props.numero++\n    };\n\n    this.menosUm = e => {\n      console.log(e);\n      this.alterNumero(-1); // this.props.numero++\n    };\n\n    this.alterarNumero = diferenca => {\n      this.setState({\n        numero: this.state.numero + diferenca\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \" N\\xFAmero: \", this.state.numero, \" \"), React.createElement(\"button\", {\n      onClick: this.maisUm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \" Inc\"), React.createElement(\"button\", {\n      onClick: this.menosUm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \" Dec \"), React.createElement(\"button\", {\n      onClick: () => this.alterarNumero(10),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" Inc10\"), React.createElement(\"button\", {\n      onClick: () => this.alterarNumero(-10),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \" Dec10 \"));\n  }\n\n} //Solução 01 - bindando o this ao método\n// constructor(props) {\n//     super(props)\n//     this.maisUm = this.maisUm.bind(this)\n// }\n//Solução 02 - Usando arrow function (onClick)\n// <button onClick={() => this.maisUm()}> Inc</button>\n//Solução 03 - Transformar o método em arrow function\n// maisUm = () => {\n\n/*Tudo que você recebe em props é somente leitura*/\n//     this.props.numero++\n//     console.log(this)\n// }","map":{"version":3,"sources":["/home/davi/exercicios-react/src/componentes/Contador.jsx"],"names":["React","Component","Contador","state","numero","props","numeroInicial","maisUm","setState","menosUm","e","console","log","alterNumero","alterarNumero","diferenca","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,eAAe,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC5CE,KAD4C,GACpC;AACJC,MAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC;AADf,KADoC;;AAAA,SAK5CC,MAL4C,GAKnC,MAAM;AACX,WAAKC,QAAL,CAAc;AAACJ,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAAX,GAAoB;AAA7B,OAAd,EADW,CAEX;AACH,KAR2C;;AAAA,SAU5CK,OAV4C,GAUjCC,CAAD,IAAO;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAKG,WAAL,CAAiB,CAAC,CAAlB,EAFa,CAGb;AACH,KAd2C;;AAAA,SAiB5CC,aAjB4C,GAiB5BC,SAAS,IAAI;AACzB,WAAKP,QAAL,CAAc;AACVJ,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAAX,GAAoBW;AADlB,OAAd;AAGH,KArB2C;AAAA;;AAwB5CC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAe,KAAKb,KAAL,CAAWC,MAA1B,MADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKG,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKK,aAAL,CAAmB,EAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,aAAL,CAAmB,CAAC,EAApB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,CADJ;AASH;;AAlC2C,C,CAqChD;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AACI;AACJ;AACA;AACA","sourcesContent":["import React, {Component} from 'react'\n\nexport default class Contador extends Component { \n    state = {\n        numero: this.props.numeroInicial\n    }\n\n    maisUm = () => {\n        this.setState({numero: this.state.numero + 1})\n        // this.props.numero++\n    }\n\n    menosUm = (e) => {\n        console.log(e)\n        this.alterNumero(-1)\n        // this.props.numero++\n    }\n    \n    // Quando um metodo tem somente um parametro, não é necessarios os parenteses\n    alterarNumero = diferenca => {\n        this.setState({\n            numero: this.state.numero + diferenca\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div> Número: {this.state.numero} </div>\n                <button onClick={this.maisUm}> Inc</button>\n                <button onClick={this.menosUm}> Dec </button>\n                <button onClick={() => this.alterarNumero(10)}> Inc10</button>\n                <button onClick={() => this.alterarNumero(-10)}> Dec10 </button>\n            </div>\n        )\n    }\n}\n\n//Solução 01 - bindando o this ao método\n// constructor(props) {\n//     super(props)\n//     this.maisUm = this.maisUm.bind(this)\n// }\n\n//Solução 02 - Usando arrow function (onClick)\n// <button onClick={() => this.maisUm()}> Inc</button>\n\n//Solução 03 - Transformar o método em arrow function\n// maisUm = () => {\n    /*Tudo que você recebe em props é somente leitura*/\n//     this.props.numero++\n//     console.log(this)\n// }"]},"metadata":{},"sourceType":"module"}