{"ast":null,"code":"var _jsxFileName = \"/home/davi/exercicios-react/src/componentes/Contador.jsx\";\nimport React, { Component } from 'react';\nexport default class Contador extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.maisUm = () => {\n      console.log(this);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \" N\\xFAmero: \", this.props.numero, \" \"), React.createElement(\"button\", {\n      onClick: this.maisUm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \" Inc\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \" Dec \"));\n  }\n\n} //Solução 01 - bindando o this ao método\n// constructor(props) {\n//     super(props)\n//     this.maisUm = this.maisUm.bind(this)\n// }\n//Solução 02 - Usando arrow function (onClick)\n// <button onClick={() => this.maisUm()}> Inc</button>\n//Solução 03 - Transformar o método em arrow function\n// maisUm = () => {\n//     this.props.numero++\n//     console.log(this)\n// }","map":{"version":3,"sources":["/home/davi/exercicios-react/src/componentes/Contador.jsx"],"names":["React","Component","Contador","maisUm","console","log","render","props","numero"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,eAAe,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAE5CE,MAF4C,GAEnC,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,KAJ2C;AAAA;;AAM5CC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAe,KAAKC,KAAL,CAAWC,MAA1B,MADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKL,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CADJ;AAOH;;AAd2C,C,CAiBhD;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react'\n\nexport default class Contador extends Component {  \n\n    maisUm = () => {\n        console.log(this)\n    }\n\n    render() {\n        return (\n            <div>\n                <div> Número: {this.props.numero} </div>\n                <button onClick={this.maisUm}> Inc</button>\n                <button> Dec </button>\n            </div>\n        )\n    }\n}\n\n//Solução 01 - bindando o this ao método\n// constructor(props) {\n//     super(props)\n//     this.maisUm = this.maisUm.bind(this)\n// }\n\n//Solução 02 - Usando arrow function (onClick)\n// <button onClick={() => this.maisUm()}> Inc</button>\n\n//Solução 03 - Transformar o método em arrow function\n// maisUm = () => {\n//     this.props.numero++\n//     console.log(this)\n// }"]},"metadata":{},"sourceType":"module"}